{
  "name": "npmsmartimporter",
  "displayName": "npmSmartImporter",
  "description": "An extension to insert import statements base on commonly used naming conventions",
  "version": "0.0.1",
  "publisher": "reflectiondm",
  "engines": {
    "vscode": "^1.15.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:javascript"
  ],
  "main": "./out/src/extension",
  "contributes": {
    "commands": [
      {
        "command": "npmSmartImporter.import",
        "title": "Smart import"
      }
    ],
    "configuration": {
      "title": "NpmSmartImporter configuration",
      "properties": {
        "npmSmartImporter.autoDetectImportStatement": {
          "type": "boolean",
          "default": true,
          "description": "Indicates if smart importer should figure out which import statement to use based on what imports are already present in the file. If none found it will adhere to useES6Import value"
        },
        "npmSmartImporter.useES6Import": {
          "type": "boolean",
          "default": true,
          "description": "If true, es6 import statement will be used for new imports"
        },
        "npmSmartImporter.provideImportSuggestionsOnSelection": {
          "type": "boolean",
          "default": false,
          "description": "If true, import suggestions will be provided not only for linting errors, but also when a variable is highlighted. It is usefull when you do not use linter for sume reason, or linting is disabled for undeclared variables."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "tsc -p ./",
    "compile": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "node ./node_modules/vscode/bin/test"
  },
  "devDependencies": {
    "@types/mocha": "^2.2.32",
    "@types/node": "^6.0.40",
    "mocha": "^2.3.3",
    "tslint": "^5.7.0",
    "typescript": "^2.5.2",
    "vscode": "^1.1.5"
  }
}
